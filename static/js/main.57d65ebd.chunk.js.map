{"version":3,"sources":["Components/Weather.js","App.js","index.js"],"names":["Weather","useState","city","setCity","search","setSearch","useEffect","a","url","fetch","response","json","resJson","main","fetchApi","className","type","value","onChange","event","target","temp","temp_min","temp_max","App","ReactDOM","render","document","getElementById"],"mappings":"+MAuDeA,EAjDC,WACZ,MAAsBC,mBAAS,MAA/B,mBAAMC,EAAN,KAAWC,EAAX,KACA,EAA0BF,mBAAS,UAAnC,mBAAMG,EAAN,KAAaC,EAAb,KAaA,OAXAC,qBAAY,YACM,uCAAG,gCAAAC,EAAA,6DACPC,EADO,4DACoDJ,EADpD,iEAEUK,MAAMD,GAFhB,cAEPE,EAFO,gBAGSA,EAASC,OAHlB,OAGPC,EAHO,OAKbT,EAAQS,EAAQC,MALH,2CAAH,qDAOdC,KAEF,CAACV,IAEC,mCACI,sBAAKW,UAAU,MAAf,UACI,qBAAKA,UAAU,YAAf,SACI,uBACIC,KAAK,SACLD,UAAU,cACVE,MAAOb,EACPc,SAAU,SAACC,GACPd,EAAUc,EAAMC,OAAOH,YAGjCf,EAAqD,oCAAM,sBAAKa,UAAU,OAAf,UACzD,qBAAIA,UAAU,WAAd,UACA,mBAAGA,UAAU,uBAA0BX,KAEvC,qBAAIW,UAAU,OAAd,UACGb,EAAKmB,KADR,aAGA,qBAAIN,UAAU,aAAd,kBAAiCb,EAAKoB,SAAtC,kBAA4DpB,EAAKqB,SAAjE,gBAEJ,qBAAKR,UAAU,cACf,qBAAKA,UAAU,cACf,qBAAKA,UAAU,mBAXL,mBAAGA,UAAU,WAAb,iCCnBXS,EAVH,WACV,OAEE,mCACA,cAAC,EAAD,OCJJC,IAASC,OACP,mCACE,cAAC,EAAD,MACEC,SAASC,eAAe,W","file":"static/js/main.57d65ebd.chunk.js","sourcesContent":["import React , { useState,  useEffect  } from \"react\";\r\nimport \"./css/style.scss\";\r\n\r\n\r\n\r\n\r\nconst Weather = () => {\r\n    const[city,setCity] = useState(null);\r\n    const[search,setSearch] = useState(\"Mumbai\");\r\n\r\n    useEffect ( () =>{\r\n        const fetchApi = async () =>{\r\n            const url = `https://api.openweathermap.org/data/2.5/weather?q=${search}&units=metric&appid=dc18c63dee5057b793dfcb657b422eb7`\r\n            const response = await fetch(url);\r\n            const resJson = await response.json();\r\n            // console.log(resJson);\r\n            setCity(resJson.main);\r\n        }\r\n        fetchApi();\r\n\r\n    },[search])\r\n    return (\r\n        <>\r\n            <div className=\"box\">\r\n                <div className=\"inputData\">\r\n                    <input\r\n                        type=\"search\"\r\n                        className=\"inputField \"\r\n                        value={search}\r\n                        onChange={(event) => {\r\n                            setSearch(event.target.value)\r\n                        }} />\r\n                </div>\r\n                {!city ? (<p className=\"errorMsg\">No Data Found</p>):( <div> <div className=\"info\">\r\n                    <h2 className=\"location\">\r\n                    <i className=\"fas fa-street-view\"></i>{search}\r\n                    </h2>\r\n                    <h1 className=\"temp\">\r\n                      {city.temp}°Cel\r\n                    </h1>\r\n                    <h3 className=\"tempin_max\">Min: {city.temp_min}°Cel | Max: {city.temp_max}°Cel</h3>\r\n                </div>\r\n                <div className=\"wave -one\"></div>\r\n                <div className=\"wave -two\"></div>\r\n                <div className=\"wave -three\"></div>\r\n                </div>)}\r\n\r\n              \r\n            </div>\r\n\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default Weather;","import React from \"react\";\nimport Weather from \"./Components/Weather\";\n\n\nconst App = () =>{\n  return(\n\n    <>\n    <Weather/>\n  </>\n    )\n\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <>\n    <App/>\n  </>,document.getElementById(\"root\")\n);"],"sourceRoot":""}